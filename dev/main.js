/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/scroller/index.js":
/*!****************************************!*\
  !*** ./node_modules/scroller/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        // AMD\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./lib/animate */ \"./node_modules/scroller/lib/animate.js\"), __webpack_require__(/*! ./lib/Scroller */ \"./node_modules/scroller/lib/Scroller.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function (exports, animate, Scroller) {\n    exports.animate = animate;\n    exports.Scroller = Scroller;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/scroller/index.js?");

/***/ }),

/***/ "./node_modules/scroller/lib/Scroller.js":
/*!***********************************************!*\
  !*** ./node_modules/scroller/lib/Scroller.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Scroller\n * http://github.com/zynga/scroller\n *\n * Copyright 2011, Zynga Inc.\n * Licensed under the MIT License.\n * https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt\n *\n * Based on the work of: Unify Project (unify-project.org)\n * http://unify-project.org\n * Copyright 2011, Deutsche Telekom AG\n * License: MIT + Apache (V2)\n */\n\n(function (root, factory) {\n    if (true) {\n        // AMD\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./animate */ \"./node_modules/scroller/lib/animate.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function (animate) {\n    var NOOP = function () {};\n\n    /**\n     * A pure logic 'component' for 'virtual' scrolling/zooming.\n     */\n    var Scroller = function (callback, options) {\n        this.__callback = callback;\n\n        this.options = {\n            /** Enable scrolling on x-axis */\n            scrollingX: true,\n\n            /** Enable scrolling on y-axis */\n            scrollingY: true,\n\n            /** Enable animations for deceleration, snap back, zooming and scrolling */\n            animating: true,\n\n            /** duration for animations triggered by scrollTo/zoomTo */\n            animationDuration: 250,\n\n            /** Enable bouncing (content can be slowly moved outside and jumps back after releasing) */\n            bouncing: true,\n\n            /** Enable locking to the main axis if user moves only slightly on one of them at start */\n            locking: true,\n\n            /** Enable pagination mode (switching between full page content panes) */\n            paging: false,\n\n            /** Enable snapping of content to a configured pixel grid */\n            snapping: false,\n\n            /** Enable zooming of content via API, fingers and mouse wheel */\n            zooming: false,\n\n            /** Minimum zoom level */\n            minZoom: 0.5,\n\n            /** Maximum zoom level */\n            maxZoom: 3,\n\n            /** Multiply or decrease scrolling speed **/\n            speedMultiplier: 1,\n\n            /** Callback that is fired on the later of touch end or deceleration end,\n                provided that another scrolling action has not begun. Used to know\n                when to fade out a scrollbar. */\n            scrollingComplete: NOOP,\n\n            /** This configures the amount of change applied to deceleration when reaching boundaries  **/\n            penetrationDeceleration : 0.03,\n\n            /** This configures the amount of change applied to acceleration when reaching boundaries  **/\n            penetrationAcceleration : 0.08\n        };\n\n        for (var key in options) {\n            this.options[key] = options[key];\n        }\n    };\n\n\n    // Easing Equations (c) 2003 Robert Penner, all rights reserved.\n    // Open source under the BSD License.\n\n    /**\n     * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n     **/\n    var easeOutCubic = function (pos) {\n        return (Math.pow((pos - 1), 3) + 1);\n    };\n\n    /**\n     * @param pos {Number} position between 0 (start of effect) and 1 (end of effect)\n     **/\n    var easeInOutCubic = function (pos) {\n        if ((pos /= 0.5) < 1) {\n            return 0.5 * Math.pow(pos, 3);\n        }\n\n        return 0.5 * (Math.pow((pos - 2), 3) + 2);\n    };\n\n\n    Scroller.prototype = {\n\n        /*\n          ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: STATUS\n          ---------------------------------------------------------------------------\n        */\n\n        /** {Boolean} Whether only a single finger is used in touch handling */\n        __isSingleTouch: false,\n\n        /** {Boolean} Whether a touch event sequence is in progress */\n        __isTracking: false,\n\n        /** {Boolean} Whether a deceleration animation went to completion. */\n        __didDecelerationComplete: false,\n\n        /**\n         * {Boolean} Whether a gesture zoom/rotate event is in progress. Activates when\n         * a gesturestart event happens. This has higher priority than dragging.\n         */\n        __isGesturing: false,\n\n        /**\n         * {Boolean} Whether the user has moved by such a distance that we have enabled\n         * dragging mode. Hint: It's only enabled after some pixels of movement to\n         * not interrupt with clicks etc.\n         */\n        __isDragging: false,\n\n        /**\n         * {Boolean} Not touching and dragging anymore, and smoothly animating the\n         * touch sequence using deceleration.\n         */\n        __isDecelerating: false,\n\n        /**\n         * {Boolean} Smoothly animating the currently configured change\n         */\n        __isAnimating: false,\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: DIMENSIONS\n          ---------------------------------------------------------------------------\n        */\n\n        /** {Integer} Viewport left boundary */\n        __clientLeft: 0,\n\n        /** {Integer} Viewport right boundary */\n        __clientTop: 0,\n\n        /** {Integer} Viewport width */\n        __clientWidth: 0,\n\n        /** {Integer} Viewport height */\n        __clientHeight: 0,\n\n        /** {Integer} Full content's width */\n        __contentWidth: 0,\n\n        /** {Integer} Full content's height */\n        __contentHeight: 0,\n\n        /** {Integer} Snapping width for content */\n        __snapWidth: 100,\n\n        /** {Integer} Snapping height for content */\n        __snapHeight: 100,\n\n        /** {Number} Zoom level */\n        __zoomLevel: 1,\n\n        /** {Number} Scroll position on x-axis */\n        __scrollLeft: 0,\n\n        /** {Number} Scroll position on y-axis */\n        __scrollTop: 0,\n\n        /** {Integer} Maximum allowed scroll position on x-axis */\n        __maxScrollLeft: 0,\n\n        /** {Integer} Maximum allowed scroll position on y-axis */\n        __maxScrollTop: 0,\n\n        /* {Number} Scheduled left position (final position when animating) */\n        __scheduledLeft: 0,\n\n        /* {Number} Scheduled top position (final position when animating) */\n        __scheduledTop: 0,\n\n        /* {Number} Scheduled zoom level (final scale when animating) */\n        __scheduledZoom: 0,\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: LAST POSITIONS\n          ---------------------------------------------------------------------------\n        */\n\n        /** {Number} Left position of finger at start */\n        __lastTouchLeft: null,\n\n        /** {Number} Top position of finger at start */\n        __lastTouchTop: null,\n\n        /** {Date} Timestamp of last move of finger. Used to limit tracking range for deceleration speed. */\n        __lastTouchMove: null,\n\n        /** {Array} List of positions, uses three indexes for each state: left, top, timestamp */\n        __positions: null,\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          INTERNAL FIELDS :: DECELERATION SUPPORT\n          ---------------------------------------------------------------------------\n        */\n\n        /** {Integer} Minimum left scroll position during deceleration */\n        __minDecelerationScrollLeft: null,\n\n        /** {Integer} Minimum top scroll position during deceleration */\n        __minDecelerationScrollTop: null,\n\n        /** {Integer} Maximum left scroll position during deceleration */\n        __maxDecelerationScrollLeft: null,\n\n        /** {Integer} Maximum top scroll position during deceleration */\n        __maxDecelerationScrollTop: null,\n\n        /** {Number} Current factor to modify horizontal scroll position with on every step */\n        __decelerationVelocityX: null,\n\n        /** {Number} Current factor to modify vertical scroll position with on every step */\n        __decelerationVelocityY: null,\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          PUBLIC API\n          ---------------------------------------------------------------------------\n        */\n\n        /**\n         * Configures the dimensions of the client (outer) and content (inner) elements.\n         * Requires the available space for the outer element and the outer size of the inner element.\n         * All values which are falsy (null or zero etc.) are ignored and the old value is kept.\n         *\n         * @param clientWidth {Integer ? null} Inner width of outer element\n         * @param clientHeight {Integer ? null} Inner height of outer element\n         * @param contentWidth {Integer ? null} Outer width of inner element\n         * @param contentHeight {Integer ? null} Outer height of inner element\n         */\n        setDimensions : function (clientWidth, clientHeight, contentWidth, contentHeight) {\n            // Only update values which are defined\n            if (clientWidth !== null) {\n                this.__clientWidth = clientWidth;\n            }\n\n            if (clientHeight !== null) {\n                this.__clientHeight = clientHeight;\n            }\n\n            if (contentWidth !== null) {\n                this.__contentWidth = contentWidth;\n            }\n\n            if (contentHeight !== null) {\n                this.__contentHeight = contentHeight;\n            }\n\n            // Refresh maximums\n            this.__computeScrollMax();\n\n            // Refresh scroll position\n            this.scrollTo(this.__scrollLeft, this.__scrollTop, true);\n        },\n\n\n        /**\n         * Sets the client coordinates in relation to the document.\n         *\n         * @param left {Integer ? 0} Left position of outer element\n         * @param top {Integer ? 0} Top position of outer element\n         */\n        setPosition : function (left, top) {\n            this.__clientLeft = left || 0;\n            this.__clientTop = top || 0;\n        },\n\n\n        /**\n         * Configures the snapping (when snapping is active)\n         *\n         * @param width {Integer} Snapping width\n         * @param height {Integer} Snapping height\n         */\n        setSnapSize : function (width, height) {\n            this.__snapWidth = width;\n            this.__snapHeight = height;\n        },\n\n\n        /**\n         * Returns the scroll position and zooming values\n         *\n         * @return {Map} `left` and `top` scroll position and `zoom` level\n         */\n        getValues : function () {\n            return {\n                left: this.__scrollLeft,\n                top: this.__scrollTop,\n                right: this.__scrollLeft + this.__clientWidth/this.__zoomLevel,\n                bottom: this.__scrollTop + this.__clientHeight/this.__zoomLevel,\n                zoom: this.__zoomLevel\n            };\n        },\n\n\n        /**\n         * Get point in in content space from scroll coordinates.\n         */\n        getPoint : function (scrollLeft, scrollTop) {\n            var values = this.getValues();\n\n            return {\n                left : scrollLeft / values.zoom,\n                top : scrollTop / values.zoom\n            };\n        },\n\n\n        /**\n         * Returns the maximum scroll values\n         *\n         * @return {Map} `left` and `top` maximum scroll values\n         */\n        getScrollMax : function () {\n            return {\n                left: this.__maxScrollLeft,\n                top: this.__maxScrollTop\n            };\n        },\n\n\n        /**\n         * Zooms to the given level. Supports optional animation. Zooms\n         * the center when no coordinates are given.\n         *\n         * @param level {Number} Level to zoom to\n         * @param isAnimated {Boolean ? false} Whether to use animation\n         * @param fixedLeft {Number ? undefined} Stationary point's left coordinate (vector in client space)\n         * @param fixedTop {Number ? undefined} Stationary point's top coordinate (vector in client space)\n         * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n         */\n        zoomTo : function (level, isAnimated, fixedLeft, fixedTop, callback) {\n            if (!this.options.zooming) {\n                throw new Error(\"Zooming is not enabled!\");\n            }\n\n            // Add callback if exists\n            if(callback) {\n                this.__zoomComplete = callback;\n            }\n\n            // Stop deceleration\n            if (this.__isDecelerating) {\n                animate.stop(this.__isDecelerating);\n                this.__isDecelerating = false;\n            }\n\n            var oldLevel = this.__zoomLevel;\n\n            // Normalize fixed point to center of viewport if not defined\n            if (fixedLeft === undefined) {\n                fixedLeft = this.__clientWidth / 2;\n            }\n\n            if (fixedTop === undefined) {\n                fixedTop = this.__clientHeight / 2;\n            }\n\n            // Limit level according to configuration\n            level = Math.max(Math.min(level, this.options.maxZoom), this.options.minZoom);\n\n            // Recompute maximum values while temporary tweaking maximum scroll ranges\n            this.__computeScrollMax(level);\n\n            // Recompute left and top scroll positions based on new zoom level.\n            // Choosing the new viewport so that the origin's position remains\n            // fixed, we have central dilation about the origin.\n            // * Fixed point, $F$, remains stationary in content space and in the\n            // viewport.\n            // * Initial scroll position, $S_i$, in content space.\n            // * Final scroll position, $S_f$, in content space.\n            // * Initial scaling factor, $k_i$.\n            // * Final scaling factor, $k_f$.\n            //\n            // * $S_i \\mapsto S_f$.\n            // * $(S_i - F) k_i = (S_f - F) k_f$.\n            // * $(S_i - F) k_i/k_f = (S_f - F)$.\n            // * $S_f = F + (S_i - F) k_i/k_f$.\n            //\n            // Fixed point location, $\\vector{f} = (F - S_i) k_i$.\n            // * $F = S_i + \\vector{f}/k_i$.\n            // * $S_f = S_i + \\vector{f}/k_i + (S_i - S_i - \\vector{f}/k_i) k_i/k_f$.\n            // * $S_f = S_i + \\vector{f}/k_i - \\vector{f}/k_f$.\n            // * $S_f k_f = S_i k_f + (k_f/k_i - 1)\\vector{f}$.\n            // * $S_f k_f = (k_f/k_i)(S_i k_i) + (k_f/k_i - 1) \\vector{f}$.\n            var k = level / oldLevel;\n            var left = k*(this.__scrollLeft + fixedLeft) - fixedLeft;\n            var top = k*(this.__scrollTop + fixedTop) - fixedTop;\n\n            // Limit x-axis\n            if (left > this.__maxScrollLeft) {\n                left = this.__maxScrollLeft;\n            } else if (left < 0) {\n                left = 0;\n            }\n\n            // Limit y-axis\n            if (top > this.__maxScrollTop) {\n                top = this.__maxScrollTop;\n            } else if (top < 0) {\n                top = 0;\n            }\n\n            // Push values out\n            this.__publish(left, top, level, isAnimated);\n        },\n\n\n        /**\n         * Zooms the content by the given factor.\n         *\n         * @param factor {Number} Zoom by given factor\n         * @param isAnimated {Boolean ? false} Whether to use animation\n         * @param originLeft {Number ? 0} Zoom in at given left coordinate\n         * @param originTop {Number ? 0} Zoom in at given top coordinate\n         * @param callback {Function ? null} A callback that gets fired when the zoom is complete.\n         */\n        zoomBy : function (factor, isAnimated, originLeft, originTop, callback) {\n            this.zoomTo(this.__zoomLevel * factor, isAnimated, originLeft, originTop, callback);\n        },\n\n\n        /**\n         * Scrolls to the given position. Respect limitations and snapping automatically.\n         *\n         * @param left {Number?null} Horizontal scroll position, keeps current if value is <code>null</code>\n         * @param top {Number?null} Vertical scroll position, keeps current if value is <code>null</code>\n         * @param isAnimated {Boolean?false} Whether the scrolling should happen using an animation\n         * @param zoom {Number} [1.0] Zoom level to go to\n         */\n        scrollTo : function (left, top, isAnimated, zoom) {\n\n            // Stop deceleration\n            if (this.__isDecelerating) {\n                animate.stop(this.__isDecelerating);\n                this.__isDecelerating = false;\n            }\n\n            // Correct coordinates based on new zoom level\n            if (zoom !== undefined && zoom !== this.__zoomLevel) {\n                if (!this.options.zooming) {\n                    throw new Error(\"Zooming is not enabled!\");\n                }\n\n                left *= zoom;\n                top *= zoom;\n\n                // Recompute maximum values while temporary tweaking maximum scroll ranges\n                this.__computeScrollMax(zoom);\n            } else {\n                // Keep zoom when not defined\n                zoom = this.__zoomLevel;\n            }\n\n            if (!this.options.scrollingX) {\n                left = this.__scrollLeft;\n            } else {\n                if (this.options.paging) {\n                    left = Math.round(left / this.__clientWidth) * this.__clientWidth;\n                } else if (this.options.snapping) {\n                    left = Math.round(left / this.__snapWidth) * this.__snapWidth;\n                }\n            }\n\n            if (!this.options.scrollingY) {\n                top = this.__scrollTop;\n            } else {\n                if (this.options.paging) {\n                    top = Math.round(top / this.__clientHeight) * this.__clientHeight;\n                } else if (this.options.snapping) {\n                    top = Math.round(top / this.__snapHeight) * this.__snapHeight;\n                }\n            }\n            // Limit for allowed ranges\n            left = Math.max(Math.min(this.__maxScrollLeft, left), 0);\n            top = Math.max(Math.min(this.__maxScrollTop, top), 0);\n\n            // Don't animate when no change detected, still call publish to make sure\n            // that rendered position is really in-sync with internal data\n            if (left === this.__scrollLeft && top === this.__scrollTop) {\n                isAnimated = false;\n            }\n\n            // Publish new values\n            this.__publish(left, top, zoom, isAnimated);\n        },\n\n\n        /**\n         * Scroll by the given offset\n         *\n         * @param left {Number ? 0} Scroll x-axis by given offset\n         * @param top {Number ? 0} Scroll x-axis by given offset\n         * @param isAnimated {Boolean ? false} Whether to animate the given change\n         */\n        scrollBy : function (left, top, isAnimated) {\n            var startLeft = this.__isAnimating ? this.__scheduledLeft : this.__scrollLeft;\n            var startTop = this.__isAnimating ? this.__scheduledTop : this.__scrollTop;\n\n            this.scrollTo(startLeft + (left || 0), startTop + (top || 0), isAnimated);\n        },\n\n\n        /*\n          ---------------------------------------------------------------------------\n          EVENT CALLBACKS\n          ---------------------------------------------------------------------------\n        */\n\n        /**\n         * Mouse wheel handler for zooming support\n         */\n        doMouseZoom : function (wheelDelta, timeStamp, pageX, pageY) {\n            var change = wheelDelta > 0 ? 0.97 : 1.03;\n\n            return this.zoomTo(this.__zoomLevel * change, false, pageX - this.__clientLeft, pageY - this.__clientTop);\n        },\n\n\n        /**\n         * Touch start handler for scrolling support\n         */\n        doTouchStart : function (touches, timeStamp) {\n            // Array-like check is enough here\n            if (touches.length === undefined) {\n                throw new Error(\"Invalid touch list: \" + touches);\n            }\n\n            if (timeStamp instanceof Date) {\n                timeStamp = timeStamp.valueOf();\n            }\n            if (typeof timeStamp !== \"number\") {\n                throw new Error(\"Invalid timestamp value: \" + timeStamp);\n            }\n\n            // Reset interruptedAnimation flag\n            this.__interruptedAnimation = true;\n\n            // Stop deceleration\n            if (this.__isDecelerating) {\n                animate.stop(this.__isDecelerating);\n                this.__isDecelerating = false;\n                this.__interruptedAnimation = true;\n            }\n\n            // Stop animation\n            if (this.__isAnimating) {\n                animate.stop(this.__isAnimating);\n                this.__isAnimating = false;\n                this.__interruptedAnimation = true;\n            }\n\n            // Use center point when dealing with two fingers\n            var currentTouchLeft, currentTouchTop;\n            var isSingleTouch = touches.length === 1;\n            if (isSingleTouch) {\n                currentTouchLeft = touches[0].pageX;\n                currentTouchTop = touches[0].pageY;\n            } else {\n                currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n                currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n            }\n\n            // Store initial positions\n            this.__initialTouchLeft = currentTouchLeft;\n            this.__initialTouchTop = currentTouchTop;\n\n            // Store current zoom level\n            this.__zoomLevelStart = this.__zoomLevel;\n\n            // Store initial touch positions\n            this.__lastTouchLeft = currentTouchLeft;\n            this.__lastTouchTop = currentTouchTop;\n\n            // Store initial move time stamp\n            this.__lastTouchMove = timeStamp;\n\n            // Reset initial scale\n            this.__lastScale = 1;\n\n            // Reset locking flags\n            this.__enableScrollX = !isSingleTouch && this.options.scrollingX;\n            this.__enableScrollY = !isSingleTouch && this.options.scrollingY;\n\n            // Reset tracking flag\n            this.__isTracking = true;\n\n            // Reset deceleration complete flag\n            this.__didDecelerationComplete = false;\n\n            // Dragging starts directly with two fingers, otherwise lazy with an offset\n            this.__isDragging = !isSingleTouch;\n\n            // Some features are disabled in multi touch scenarios\n            this.__isSingleTouch = isSingleTouch;\n\n            // Clearing data structure\n            this.__positions = [];\n        },\n\n\n        /**\n         * Touch move handler for scrolling support\n         * @param {Number} [1.0] scale - ....\n         */\n        doTouchMove : function (touches, timeStamp, scale) {\n            // Array-like check is enough here\n            if (touches.length === undefined) {\n                throw new Error(\"Invalid touch list: \" + touches);\n            }\n\n            if (timeStamp instanceof Date) {\n                timeStamp = timeStamp.valueOf();\n            }\n            if (typeof timeStamp !== \"number\") {\n                throw new Error(\"Invalid timestamp value: \" + timeStamp);\n            }\n\n            // Ignore event when tracking is not enabled (event might be outside of element)\n            if (!this.__isTracking) {\n                return;\n            }\n\n            var currentTouchLeft, currentTouchTop;\n\n            // Compute move based around of center of fingers\n            if (touches.length === 2) {\n                currentTouchLeft = Math.abs(touches[0].pageX + touches[1].pageX) / 2;\n                currentTouchTop = Math.abs(touches[0].pageY + touches[1].pageY) / 2;\n            } else {\n                currentTouchLeft = touches[0].pageX;\n                currentTouchTop = touches[0].pageY;\n            }\n\n            var positions = this.__positions;\n\n            // Are we already is dragging mode?\n            if (this.__isDragging) {\n                // Compute move distance\n                var moveX = currentTouchLeft - this.__lastTouchLeft;\n                var moveY = currentTouchTop - this.__lastTouchTop;\n\n                // Read previous scroll position and zooming\n                var scrollLeft = this.__scrollLeft;\n                var scrollTop = this.__scrollTop;\n                var level = this.__zoomLevel;\n\n                // Work with scaling\n                if (scale !== undefined && this.options.zooming) {\n                    var oldLevel = level;\n\n                    // Recompute level based on previous scale and new scale\n                    level = level / this.__lastScale * scale;\n\n                    // Limit level according to configuration\n                    level = Math.max(Math.min(level, this.options.maxZoom), this.options.minZoom);\n\n                    // Only do further compution when change happened\n                    if (oldLevel !== level) {\n                        // Compute relative event position to container\n                        var currentTouchLeftRel = currentTouchLeft - this.__clientLeft;\n                        var currentTouchTopRel = currentTouchTop - this.__clientTop;\n\n                        // Recompute left and top coordinates based on new zoom level\n                        scrollLeft = ((currentTouchLeftRel + scrollLeft) * level / oldLevel) - currentTouchLeftRel;\n                        scrollTop = ((currentTouchTopRel + scrollTop) * level / oldLevel) - currentTouchTopRel;\n\n                        // Recompute max scroll values\n                        this.__computeScrollMax(level);\n                    }\n                }\n\n                if (this.__enableScrollX) {\n                    scrollLeft -= moveX * this.options.speedMultiplier;\n                    var maxScrollLeft = this.__maxScrollLeft;\n\n                    if (scrollLeft > maxScrollLeft || scrollLeft < 0) {\n                        // Slow down on the edges\n                        if (this.options.bouncing) {\n                            scrollLeft += (moveX / 2  * this.options.speedMultiplier);\n                        } else if (scrollLeft > maxScrollLeft) {\n                            scrollLeft = maxScrollLeft;\n                        } else {\n                            scrollLeft = 0;\n                        }\n                    }\n                }\n\n                // Compute new vertical scroll position\n                if (this.__enableScrollY) {\n                    scrollTop -= moveY * this.options.speedMultiplier;\n                    var maxScrollTop = this.__maxScrollTop;\n\n                    if (scrollTop > maxScrollTop || scrollTop < 0) {\n                        // Slow down on the edges\n                        if (this.options.bouncing) {\n                            scrollTop += (moveY / 2 * this.options.speedMultiplier);\n                        } else if (scrollTop > maxScrollTop) {\n                            scrollTop = maxScrollTop;\n                        } else {\n                            scrollTop = 0;\n                        }\n                    }\n                }\n\n                // Keep list from growing infinitely (holding min 10, max 20 measure points)\n                if (positions.length > 60) {\n                    positions.splice(0, 30);\n                }\n\n                // Track scroll movement for decleration\n                positions.push(scrollLeft, scrollTop, timeStamp);\n\n                // Sync scroll position\n                this.__publish(scrollLeft, scrollTop, level);\n\n                // Otherwise figure out whether we are switching into dragging mode now.\n            } else {\n                var minimumTrackingForScroll = this.options.locking ? 3 : 0;\n                var minimumTrackingForDrag = 5;\n\n                var distanceX = Math.abs(currentTouchLeft - this.__initialTouchLeft);\n                var distanceY = Math.abs(currentTouchTop - this.__initialTouchTop);\n\n                this.__enableScrollX = this.options.scrollingX && distanceX >= minimumTrackingForScroll;\n                this.__enableScrollY = this.options.scrollingY && distanceY >= minimumTrackingForScroll;\n\n                positions.push(this.__scrollLeft, this.__scrollTop, timeStamp);\n\n                this.__isDragging = (this.__enableScrollX || this.__enableScrollY) && (distanceX >= minimumTrackingForDrag || distanceY >= minimumTrackingForDrag);\n                if (this.__isDragging) {\n                    this.__interruptedAnimation = false;\n                }\n            }\n\n            // Update last touch positions and time stamp for next event\n            this.__lastTouchLeft = currentTouchLeft;\n            this.__lastTouchTop = currentTouchTop;\n            this.__lastTouchMove = timeStamp;\n            this.__lastScale = scale;\n        },\n\n\n        /**\n         * Touch end handler for scrolling support\n         */\n        doTouchEnd : function (timeStamp) {\n            if (timeStamp instanceof Date) {\n                timeStamp = timeStamp.valueOf();\n            }\n            if (typeof timeStamp !== \"number\") {\n                throw new Error(\"Invalid timestamp value: \" + timeStamp);\n            }\n\n            // Ignore event when tracking is not enabled (no touchstart event on element)\n            // This is required as this listener ('touchmove') sits on the document and not on the element itself.\n            if (!this.__isTracking) {\n                return;\n            }\n\n            // Not touching anymore (when two finger hit the screen there are two touch end events)\n            this.__isTracking = false;\n\n            // Be sure to reset the dragging flag now. Here we also detect whether\n            // the finger has moved fast enough to switch into a deceleration animation.\n            if (this.__isDragging) {\n                // Reset dragging flag\n                this.__isDragging = false;\n\n                // Start deceleration\n                // Verify that the last move detected was in some relevant time frame\n                if (this.__isSingleTouch && this.options.animating && (timeStamp - this.__lastTouchMove) <= 100) {\n                    // Then figure out what the scroll position was about 100ms ago\n                    var positions = this.__positions;\n                    var endPos = positions.length - 1;\n                    var startPos = endPos;\n\n                    // Move pointer to position measured 100ms ago\n                    for (var i = endPos; i > 0 && positions[i] > (this.__lastTouchMove - 100); i -= 3) {\n                        startPos = i;\n                    }\n\n                    // If start and stop position is identical in a 100ms timeframe,\n                    // we cannot compute any useful deceleration.\n                    if (startPos !== endPos) {\n                        // Compute relative movement between these two points\n                        var timeOffset = positions[endPos] - positions[startPos];\n                        var movedLeft = this.__scrollLeft - positions[startPos - 2];\n                        var movedTop = this.__scrollTop - positions[startPos - 1];\n\n                        // Based on 50ms compute the movement to apply for each render step\n                        this.__decelerationVelocityX = movedLeft / timeOffset * (1000 / 60);\n                        this.__decelerationVelocityY = movedTop / timeOffset * (1000 / 60);\n\n                        // How much velocity is required to start the deceleration\n                        var minVelocityToStartDeceleration = this.options.paging || this.options.snapping ? 4 : 1;\n\n                        // Verify that we have enough velocity to start deceleration\n                        if (Math.abs(this.__decelerationVelocityX) > minVelocityToStartDeceleration || Math.abs(this.__decelerationVelocityY) > minVelocityToStartDeceleration) {\n                            this.__startDeceleration(timeStamp);\n                        }\n                    } else {\n                        this.options.scrollingComplete();\n                    }\n                } else if ((timeStamp - this.__lastTouchMove) > 100) {\n                    this.options.scrollingComplete();\n                }\n            }\n\n            // If this was a slower move it is per default non decelerated, but this\n            // still means that we want snap back to the bounds which is done here.\n            // This is placed outside the condition above to improve edge case stability\n            // e.g. touchend fired without enabled dragging. This should normally do not\n            // have modified the scroll positions or even showed the scrollbars though.\n            if (!this.__isDecelerating) {\n                if (this.__interruptedAnimation || this.__isDragging) {\n                    this.options.scrollingComplete();\n                }\n                this.scrollTo(this.__scrollLeft, this.__scrollTop, true, this.__zoomLevel);\n            }\n\n            // Fully cleanup list\n            this.__positions.length = 0;\n        },\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          PRIVATE API\n          ---------------------------------------------------------------------------\n        */\n\n        /**\n         * Applies the scroll position to the content element\n         *\n         * @param left {Number} Left scroll position\n         * @param top {Number} Top scroll position\n         * @param isAnimated {Boolean?false} Whether animation should be used to move to the new coordinates\n         */\n        __publish : function (left, top, zoom, isAnimated) {\n            // Remember whether we had an animation, then we try to continue\n            // based on the current \"drive\" of the animation.\n            var wasAnimating = this.__isAnimating;\n            if (wasAnimating) {\n                animate.stop(wasAnimating);\n                this.__isAnimating = false;\n            }\n\n            if (isAnimated && this.options.animating) {\n                // Keep scheduled positions for scrollBy/zoomBy functionality.\n                this.__scheduledLeft = left;\n                this.__scheduledTop = top;\n                this.__scheduledZoom = zoom;\n\n                var oldLeft = this.__scrollLeft;\n                var oldTop = this.__scrollTop;\n                var oldZoom = this.__zoomLevel;\n\n                var diffLeft = left - oldLeft;\n                var diffTop = top - oldTop;\n                var diffZoom = zoom - oldZoom;\n\n                var step = function (percent, now, render) {\n                    if (render) {\n                        this.__scrollLeft = oldLeft + (diffLeft * percent);\n                        this.__scrollTop = oldTop + (diffTop * percent);\n                        this.__zoomLevel = oldZoom + (diffZoom * percent);\n\n                        // Push values out\n                        if (this.__callback) {\n                            this.__callback(this.__scrollLeft, this.__scrollTop, this.__zoomLevel);\n                        }\n                    }\n                }.bind(this);\n\n                var verify = function (id) {\n                    return this.__isAnimating === id;\n                }.bind(this);\n\n                var completed = function (renderedFramesPerSecond, animationId, wasFinished) {\n                    if (animationId === this.__isAnimating) {\n                        this.__isAnimating = false;\n                    }\n                    if (this.__didDecelerationComplete || wasFinished) {\n                        this.options.scrollingComplete();\n                    }\n\n                    if (this.options.zooming) {\n                        this.__computeScrollMax();\n                        if (this.__zoomComplete) {\n                            this.__zoomComplete();\n                            this.__zoomComplete = null;\n                        }\n                    }\n                }.bind(this);\n\n                // When continuing based on previous animation we choose an ease-out animation instead of ease-in-out\n                this.__isAnimating = animate.start(step, verify, completed, this.options.animationDuration, wasAnimating ? easeOutCubic : easeInOutCubic);\n\n            } else {\n                this.__scheduledLeft = this.__scrollLeft = left;\n                this.__scheduledTop = this.__scrollTop = top;\n                this.__scheduledZoom = this.__zoomLevel = zoom;\n\n                // Push values out\n                if (this.__callback) {\n                    this.__callback(left, top, zoom);\n                }\n\n                // Fix max scroll ranges\n                if (this.options.zooming) {\n                    this.__computeScrollMax();\n                    if (this.__zoomComplete) {\n                        this.__zoomComplete();\n                        this.__zoomComplete = null;\n                    }\n                }\n            }\n        },\n\n\n        /**\n         * Recomputes scroll minimum values based on client dimensions and content dimensions.\n         */\n        __computeScrollMax : function (zoomLevel) {\n            if (zoomLevel === undefined) {\n                zoomLevel = this.__zoomLevel;\n            }\n\n            this.__maxScrollLeft = Math.max(this.__contentWidth*zoomLevel - this.__clientWidth, 0);\n            this.__maxScrollTop = Math.max(this.__contentHeight*zoomLevel - this.__clientHeight, 0);\n        },\n\n\n\n        /*\n          ---------------------------------------------------------------------------\n          ANIMATION (DECELERATION) SUPPORT\n          ---------------------------------------------------------------------------\n        */\n\n        /**\n         * Called when a touch sequence end and the speed of the finger was high enough\n         * to switch into deceleration mode.\n         */\n        __startDeceleration : function (timeStamp) {\n            if (this.options.paging) {\n                var scrollLeft = Math.max(Math.min(this.__scrollLeft, this.__maxScrollLeft), 0);\n                var scrollTop = Math.max(Math.min(this.__scrollTop, this.__maxScrollTop), 0);\n                var clientWidth = this.__clientWidth;\n                var clientHeight = this.__clientHeight;\n\n                // We limit deceleration not to the min/max values of the allowed range, but to the size of the visible client area.\n                // Each page should have exactly the size of the client area.\n                this.__minDecelerationScrollLeft = Math.floor(scrollLeft / clientWidth) * clientWidth;\n                this.__minDecelerationScrollTop = Math.floor(scrollTop / clientHeight) * clientHeight;\n                this.__maxDecelerationScrollLeft = Math.ceil(scrollLeft / clientWidth) * clientWidth;\n                this.__maxDecelerationScrollTop = Math.ceil(scrollTop / clientHeight) * clientHeight;\n            } else {\n                this.__minDecelerationScrollLeft = 0;\n                this.__minDecelerationScrollTop = 0;\n                this.__maxDecelerationScrollLeft = this.__maxScrollLeft;\n                this.__maxDecelerationScrollTop = this.__maxScrollTop;\n            }\n\n            // Wrap class method\n            var step = function (percent, now, render) {\n                this.__stepThroughDeceleration(render);\n            }.bind(this);\n\n            // How much velocity is required to keep the deceleration running\n            var minVelocityToKeepDecelerating = this.options.snapping ? 4 : 0.1;\n\n            // Detect whether it's still worth to continue animating steps\n            // If we are already slow enough to not being user perceivable anymore, we stop the whole process here.\n            var verify = function () {\n                var shouldContinue = Math.abs(this.__decelerationVelocityX) >= minVelocityToKeepDecelerating || Math.abs(this.__decelerationVelocityY) >= minVelocityToKeepDecelerating;\n                if (!shouldContinue) {\n                    this.__didDecelerationComplete = true;\n                }\n                return shouldContinue;\n            }.bind(this);\n\n            var completed = function (renderedFramesPerSecond, animationId, wasFinished) {\n                this.__isDecelerating = false;\n                if (this.__didDecelerationComplete) {\n                    this.options.scrollingComplete();\n                }\n\n                // Animate to grid when snapping is active, otherwise just fix out-of-boundary positions\n                this.scrollTo(this.__scrollLeft, this.__scrollTop, this.options.snapping);\n            }.bind(this);\n\n            // Start animation and switch on flag\n            this.__isDecelerating = animate.start(step, verify, completed);\n        },\n\n\n        /**\n         * Called on every step of the animation\n         *\n         * @param inMemory {Boolean?false} Whether to not render the current step, but keep it in memory only. Used internally only!\n         */\n        __stepThroughDeceleration : function (render) {\n\n            //\n            // COMPUTE NEXT SCROLL POSITION\n            //\n\n            // Add deceleration to scroll position\n            var scrollLeft = this.__scrollLeft + this.__decelerationVelocityX;\n            var scrollTop = this.__scrollTop + this.__decelerationVelocityY;\n\n\n            //\n            // HARD LIMIT SCROLL POSITION FOR NON BOUNCING MODE\n            //\n\n            if (!this.options.bouncing) {\n                var scrollLeftFixed = Math.max(Math.min(this.__maxDecelerationScrollLeft, scrollLeft), this.__minDecelerationScrollLeft);\n                if (scrollLeftFixed !== scrollLeft) {\n                    scrollLeft = scrollLeftFixed;\n                    this.__decelerationVelocityX = 0;\n                }\n\n                var scrollTopFixed = Math.max(Math.min(this.__maxDecelerationScrollTop, scrollTop), this.__minDecelerationScrollTop);\n                if (scrollTopFixed !== scrollTop) {\n                    scrollTop = scrollTopFixed;\n                    this.__decelerationVelocityY = 0;\n                }\n            }\n\n\n            //\n            // UPDATE SCROLL POSITION\n            //\n\n            if (render) {\n                this.__publish(scrollLeft, scrollTop, this.__zoomLevel);\n            } else {\n                this.__scrollLeft = scrollLeft;\n                this.__scrollTop = scrollTop;\n            }\n\n\n            //\n            // SLOW DOWN\n            //\n\n            // Slow down velocity on every iteration\n            if (!this.options.paging) {\n                // This is the factor applied to every iteration of the animation\n                // to slow down the process. This should emulate natural behavior where\n                // objects slow down when the initiator of the movement is removed\n                var frictionFactor = 0.95;\n\n                this.__decelerationVelocityX *= frictionFactor;\n                this.__decelerationVelocityY *= frictionFactor;\n            }\n\n\n            //\n            // BOUNCING SUPPORT\n            //\n\n            if (this.options.bouncing) {\n                var scrollOutsideX = 0;\n                var scrollOutsideY = 0;\n\n                // This configures the amount of change applied to deceleration/acceleration when reaching boundaries\n                var penetrationDeceleration = this.options.penetrationDeceleration;\n                var penetrationAcceleration = this.options.penetrationAcceleration;\n\n                // Check limits\n                if (scrollLeft < this.__minDecelerationScrollLeft) {\n                    scrollOutsideX = this.__minDecelerationScrollLeft - scrollLeft;\n                } else if (scrollLeft > this.__maxDecelerationScrollLeft) {\n                    scrollOutsideX = this.__maxDecelerationScrollLeft - scrollLeft;\n                }\n\n                if (scrollTop < this.__minDecelerationScrollTop) {\n                    scrollOutsideY = this.__minDecelerationScrollTop - scrollTop;\n                } else if (scrollTop > this.__maxDecelerationScrollTop) {\n                    scrollOutsideY = this.__maxDecelerationScrollTop - scrollTop;\n                }\n\n                // Slow down until slow enough, then flip back to snap position\n                if (scrollOutsideX !== 0) {\n                    if (scrollOutsideX * this.__decelerationVelocityX <= 0) {\n                        this.__decelerationVelocityX += scrollOutsideX * penetrationDeceleration;\n                    } else {\n                        this.__decelerationVelocityX = scrollOutsideX * penetrationAcceleration;\n                    }\n                }\n\n                if (scrollOutsideY !== 0) {\n                    if (scrollOutsideY * this.__decelerationVelocityY <= 0) {\n                        this.__decelerationVelocityY += scrollOutsideY * penetrationDeceleration;\n                    } else {\n                        this.__decelerationVelocityY = scrollOutsideY * penetrationAcceleration;\n                    }\n                }\n            }\n        }\n    };\n\n    return Scroller;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/scroller/lib/Scroller.js?");

/***/ }),

/***/ "./node_modules/scroller/lib/animate.js":
/*!**********************************************!*\
  !*** ./node_modules/scroller/lib/animate.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Scroller\n * http://github.com/zynga/scroller\n *\n * Copyright 2011, Zynga Inc.\n * Licensed under the MIT License.\n * https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt\n *\n * Based on the work of: Unify Project (unify-project.org)\n * http://unify-project.org\n * Copyright 2011, Deutsche Telekom AG\n * License: MIT + Apache (V2)\n */\n\n/**\n * Generic animation class with support for dropped frames both optional easing and duration.\n *\n * Optional duration is useful when the lifetime is defined by another condition than time\n * e.g. speed of an animating object, etc.\n *\n * Dropped frame logic allows to keep using the same updater logic independent from the actual\n * rendering. This eases a lot of cases where it might be pretty complex to break down a state\n * based on the pure time difference.\n */\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function (exports) {\n    var global = typeof window === 'undefined' ? this : window\n    var time = Date.now || function () {\n        return +new Date();\n    };\n    var desiredFrames = 60;\n    var millisecondsPerSecond = 1000;\n    var running = {};\n    var counter = 1;\n\n    /**\n     * A requestAnimationFrame wrapper / polyfill.\n     *\n     * @param callback {Function} The callback to be invoked before the next repaint.\n     * @param root {HTMLElement} The root element for the repaint\n     */\n    exports.requestAnimationFrame = (function () {\n        // Check for request animation Frame support\n        var requestFrame = global.requestAnimationFrame || global.webkitRequestAnimationFrame || global.mozRequestAnimationFrame || global.oRequestAnimationFrame;\n        var isNative = !!requestFrame;\n\n        if (requestFrame && !/requestAnimationFrame\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}/i.test(requestFrame.toString())) {\n            isNative = false;\n        }\n\n        if (isNative) {\n            return function (callback, root) {\n                requestFrame(callback, root);\n            };\n        }\n\n        var TARGET_FPS = 60;\n        var requests = {};\n        var requestCount = 0;\n        var rafHandle = 1;\n        var intervalHandle = null;\n        var lastActive = +new Date();\n\n        return function (callback, root) {\n            var callbackHandle = rafHandle++;\n\n            // Store callback\n            requests[callbackHandle] = callback;\n            requestCount++;\n\n            // Create timeout at first request\n            if (intervalHandle === null) {\n\n                intervalHandle = setInterval(function () {\n\n                    var time = +new Date();\n                    var currentRequests = requests;\n\n                    // Reset data structure before executing callbacks\n                    requests = {};\n                    requestCount = 0;\n\n                    for(var key in currentRequests) {\n                        if (currentRequests.hasOwnProperty(key)) {\n                            currentRequests[key](time);\n                            lastActive = time;\n                        }\n                    }\n\n                    // Disable the timeout when nothing happens for a certain\n                    // period of time\n                    if (time - lastActive > 2500) {\n                        clearInterval(intervalHandle);\n                        intervalHandle = null;\n                    }\n\n                }, 1000 / TARGET_FPS);\n            }\n\n            return callbackHandle;\n        };\n\n    })();\n\n    /**\n     * Stops the given animation.\n     *\n     * @param id {Integer} Unique animation ID\n     * @return {Boolean} Whether the animation was stopped (aka, was running before)\n     */\n    exports.stop = function (id) {\n        var cleared = (running[id] !== null);\n        if (cleared) {\n            running[id] = null;\n        }\n\n        return cleared;\n    };\n\n\n    /**\n     * Whether the given animation is still running.\n     *\n     * @param id {Integer} Unique animation ID\n     * @return {Boolean} Whether the animation is still running\n     */\n    exports.isRunning = function (id) {\n        return running[id] !== null;\n    };\n\n\n    /**\n     * Start the animation.\n     *\n     * @param stepCallback {Function} Pointer to function which is executed on every step.\n     *   Signature of the method should be `function(percent, now, virtual) { return continueWithAnimation; }`\n     * @param verifyCallback {Function} Executed before every animation step.\n     *   Signature of the method should be `function() { return continueWithAnimation; }`\n     * @param completedCallback {Function}\n     *   Signature of the method should be `function(droppedFrames, finishedAnimation, optional wasFinished) {}`\n     * @param duration {Integer} Milliseconds to run the animation\n     * @param easingMethod {Function} Pointer to easing function\n     *   Signature of the method should be `function(percent) { return modifiedValue; }`\n     * @param root {Element} Render root. Used for internal usage of requestAnimationFrame.\n     * @return {Integer} Identifier of animation. Can be used to stop it any time.\n     */\n    exports.start = function (stepCallback, verifyCallback, completedCallback, duration, easingMethod, root) {\n        var start = time();\n        var lastFrame = start;\n        var percent = 0;\n        var dropCounter = 0;\n        var id = counter++;\n\n        // Compacting running db automatically every few new animations\n        if (id % 20 === 0) {\n            var newRunning = {};\n            for (var usedId in running) {\n                newRunning[usedId] = true;\n            }\n            running = newRunning;\n        }\n\n        // This is the internal step method which is called every few milliseconds\n        var step = function (virtual) {\n\n            // Normalize virtual value\n            var render = virtual !== true;\n\n            // Get current time\n            var now = time();\n\n            // Verification is executed before next animation step\n            if (!running[id] || (verifyCallback && !verifyCallback(id))) {\n\n                running[id] = null;\n                completedCallback(desiredFrames - (dropCounter / ((now - start) / millisecondsPerSecond)), id, false);\n                return;\n\n            }\n\n            // For the current rendering to apply let's update omitted steps in memory.\n            // This is important to bring internal state variables up-to-date with progress in time.\n            if (render) {\n\n                var droppedFrames = Math.round((now - lastFrame) / (millisecondsPerSecond / desiredFrames)) - 1;\n                for (var j = 0; j < Math.min(droppedFrames, 4); j++) {\n                    step(true);\n                    dropCounter++;\n                }\n\n            }\n\n            // Compute percent value\n            if (duration) {\n                percent = (now - start) / duration;\n                if (percent > 1) {\n                    percent = 1;\n                }\n            }\n\n            // Execute step callback, then...\n            var value = easingMethod ? easingMethod(percent) : percent;\n            if ((stepCallback(value, now, render) === false || percent === 1) && render) {\n                running[id] = null;\n                completedCallback(desiredFrames - (dropCounter / ((now - start) / millisecondsPerSecond)), id, percent === 1 || duration === undefined);\n            } else if (render) {\n                lastFrame = now;\n                exports.requestAnimationFrame(step, root);\n            }\n        };\n\n        // Mark as running\n        running[id] = true;\n\n        // Init first step\n        exports.requestAnimationFrame(step, root);\n\n        // Return unique animation ID\n        return id;\n    };\n}));\n\n\n//# sourceURL=webpack:///./node_modules/scroller/lib/animate.js?");

/***/ }),

/***/ "./src/core/event.js":
/*!***************************!*\
  !*** ./src/core/event.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author muwoo\n * Date: 2018/7/11\n */\nvar Event = exports.Event = function () {\n  function Event(ctx) {\n    _classCallCheck(this, Event);\n\n    this.ctx = ctx || null;\n    this.stack = [];\n  }\n\n  _createClass(Event, [{\n    key: 'init',\n    value: function init(canvas) {\n      canvas.removeEventListener('click', this.dispatch);\n      canvas.removeEventListener('mousedown', this.dispatch);\n      canvas.removeEventListener('mouseup', this.dispatch);\n      canvas.addEventListener('click', this.dispatch.bind(this));\n      canvas.addEventListener('mousedown', this.dispatch.bind(this));\n      canvas.addEventListener('mouseup', this.dispatch.bind(this));\n    }\n  }, {\n    key: 'addEvent',\n    value: function addEvent(shape, fns) {\n      this.stack.push({\n        shape: shape,\n        handler: fns\n      });\n    }\n  }, {\n    key: 'dispatch',\n    value: function dispatch(point) {\n      this.stack.forEach(function (item) {\n        if (item.handler[point.type] && item.shape.isInPath(point)) {\n          item.handler[point.type](point, item);\n        }\n      });\n    }\n  }]);\n\n  return Event;\n}();\n\n//# sourceURL=webpack:///./src/core/event.js?");

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Render = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _event = __webpack_require__(/*! ./event */ \"./src/core/event.js\");\n\nvar _shape = __webpack_require__(/*! ./shape */ \"./src/core/shape/index.js\");\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/core/utils/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author muwoo\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Date: 2018/7/2\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar Render = exports.Render = function (_Canvas) {\n  _inherits(Render, _Canvas);\n\n  /**\n   * constructor\n   * @param renderInstance: mainCanvas instance\n   * @param vnode: virtual dom\n   * @param width: render width\n   * @param height: render height\n   */\n  function Render(renderInstance, vnode, width, height) {\n    _classCallCheck(this, Render);\n\n    /**\n     * render canvas container\n     * @type {null}\n     */\n    var _this = _possibleConstructorReturn(this, (Render.__proto__ || Object.getPrototypeOf(Render)).call(this, width, height));\n\n    _this.mainView = null;\n    _this.renderInstance = renderInstance;\n    _this.statck = [vnode];\n    _this.event = new _event.Event(_this._ctx);\n    _this.event.init(renderInstance._canvas);\n    _utils.canvasItemPool.clear();\n    _this.id = 0;\n    return _this;\n  }\n\n  _createClass(Render, [{\n    key: 'clearCanvas',\n    value: function clearCanvas() {\n      this._ctx.clearRect(0, 0, this.width, this.height);\n    }\n  }, {\n    key: 'vnode2canvas',\n    value: function vnode2canvas() {\n      this.traverse(this.statck);\n      return this._canvas;\n    }\n\n    /**\n     * if style import with css file\n     * @param vnode\n     * @returns {{}}\n     */\n\n  }, {\n    key: 'getImportStyle',\n    value: function getImportStyle(vnode) {\n      var style = {};\n      var vStyle = window.vStyle || {};\n      Object.keys(vStyle).forEach(function (key) {\n        if (vnode.data && vnode.data.class) {\n          if ('.' + vnode.data.class === key) {\n            style = vStyle[key];\n          }\n        }\n        if (vnode.tag) {\n          if (vnode.tag === key) {\n            style = vStyle[key];\n          }\n        }\n      });\n      return style;\n    }\n\n    /**\n     * Proxy\n     * @param target: virtual dom\n     * @param key: render type\n     * @returns {*}\n     */\n\n  }, {\n    key: 'renderProxy',\n    value: function renderProxy(target, key) {\n      var _this2 = this;\n\n      target.data = target.data || {};\n      var importStyle = this.getImportStyle(target);\n      var drawStyle = _extends({}, importStyle, target.data.style) || _extends({}, importStyle);\n      var canvasItem = null;\n      return {\n        scrollView: function scrollView() {\n          canvasItem = new _shape.ScrollView(drawStyle);\n          canvasItem.draw(_this2);\n          return canvasItem;\n        },\n        scrollItem: function scrollItem(ctx) {\n          canvasItem = new _shape.ScrollItem(drawStyle, target);\n          canvasItem.createCacheCanvas(_this2);\n          canvasItem.draw(ctx, 0);\n          return canvasItem;\n        },\n        view: function view(ctx) {\n          canvasItem = new _shape.View(drawStyle);\n          canvasItem.draw(ctx, 0);\n          return canvasItem;\n        },\n        text: function text(ctx) {\n          canvasItem = new _shape.Text(drawStyle, target.children[0].text);\n          canvasItem.draw(ctx, 0);\n          return canvasItem;\n        },\n        image: function image(ctx) {\n          var src = void 0;\n          (src = target.data.props) && (src = src.src || '');\n          canvasItem = new _shape.Img(drawStyle, src);\n          canvasItem.draw(_this2.renderInstance._ctx, 0, 0, _this2.mainView);\n          return canvasItem;\n        }\n      }[key];\n    }\n\n    /**\n     * traverse dom by BFS\n     * @param stack\n     * @param ctx\n     */\n\n  }, {\n    key: 'traverse',\n    value: function traverse(stack, ctx) {\n      while (stack.length) {\n        var vnode = stack.shift();\n        this.renderItem(vnode, ctx || this._ctx, !ctx);\n        /**\n         * check need traverse or not\n         */\n        if (!vnode.children || vnode.tag === 'text' || vnode.tag === 'scrollItem') {\n          continue;\n        }\n\n        vnode.children.forEach(function (node) {\n          stack.push(node);\n        });\n      }\n    }\n\n    /**\n     * render canvas item\n     * @param item: canvas item\n     * @param ctx: canvas context\n     * @param collect: need collect to canvasItemPool\n     */\n\n  }, {\n    key: 'renderItem',\n    value: function renderItem(item, ctx, collect) {\n      var canvasItem = new Proxy(item, { get: this.renderProxy.bind(this) })[item.tag](ctx);\n      this.event.addEvent(canvasItem, item.data.on || {});\n      if (item.tag === 'scrollView') {\n        this.mainView = canvasItem;\n      }\n      if (item.tag !== 'scrollView' && collect) {\n        this.id++;\n        _utils.canvasItemPool.add(this.id, canvasItem);\n      }\n    }\n  }]);\n\n  return Render;\n}(_utils.Canvas);\n\n//# sourceURL=webpack:///./src/core/index.js?");

/***/ }),

/***/ "./src/core/shape/image.js":
/*!*********************************!*\
  !*** ./src/core/shape/image.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Img = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _super = __webpack_require__(/*! ./super */ \"./src/core/shape/super.js\");\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./src/core/utils/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author muwoo\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Date: 2018/7/12\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar Img = exports.Img = function (_Super) {\n  _inherits(Img, _Super);\n\n  function Img(drawStyle, src) {\n    _classCallCheck(this, Img);\n\n    var _this = _possibleConstructorReturn(this, (Img.__proto__ || Object.getPrototypeOf(Img)).call(this, drawStyle));\n\n    _this.src = src;\n    _this.img = null;\n    return _this;\n  }\n\n  _createClass(Img, [{\n    key: 'drawImg',\n    value: function drawImg(ctx, scrollTop) {\n      ctx.drawImage(this.img, this.startX, this.startY - scrollTop, this.width, this.height);\n    }\n  }, {\n    key: 'draw',\n    value: function draw(ctx, scrollTop, heigth, mainView) {\n      var _this2 = this;\n\n      // check visible\n      if (this.isVisible(scrollTop)) {\n        return;\n      }\n      // check cache\n      if (this.render || (this.img = _utils.imgCachePool.get(this.src))) {\n        return this.drawImg(ctx, scrollTop);\n      }\n\n      // load Img\n      this.img = new Image();\n      this.img.onload = function () {\n        if (_this2.isVisible(_utils.constants.scrollerTop)) {\n          return;\n        }\n        _this2.render = true;\n        _this2.drawImg(ctx, scrollTop);\n        if (!!_utils.imgCachePool.get(_this2.src) && mainView) {\n          mainView.reRender(_utils.constants.scrollerTop);\n        }\n      };\n      this.img.crossOrigin = true;\n      this.img.src = this.src;\n      _utils.imgCachePool.add(this.src, this.img);\n    }\n  }]);\n\n  return Img;\n}(_super.Super);\n\n//# sourceURL=webpack:///./src/core/shape/image.js?");

/***/ }),

/***/ "./src/core/shape/index.js":
/*!*********************************!*\
  !*** ./src/core/shape/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.View = exports.ScrollView = exports.ScrollItem = exports.Text = exports.Img = undefined;\n\nvar _image = __webpack_require__(/*! ./image */ \"./src/core/shape/image.js\");\n\nvar _text = __webpack_require__(/*! ./text */ \"./src/core/shape/text.js\");\n\nvar _scrollItem = __webpack_require__(/*! ./scrollItem */ \"./src/core/shape/scrollItem.js\");\n\nvar _scrollView = __webpack_require__(/*! ./scrollView */ \"./src/core/shape/scrollView.js\");\n\nvar _view = __webpack_require__(/*! ./view */ \"./src/core/shape/view.js\");\n\nexports.Img = _image.Img;\nexports.Text = _text.Text;\nexports.ScrollItem = _scrollItem.ScrollItem;\nexports.ScrollView = _scrollView.ScrollView;\nexports.View = _view.View; /**\n                            * @author muwoo\n                            * Date: 2018/7/15\n                            */\n\n//# sourceURL=webpack:///./src/core/shape/index.js?");

/***/ }),

/***/ "./src/core/shape/scrollItem.js":
/*!**************************************!*\
  !*** ./src/core/shape/scrollItem.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _super = __webpack_require__(/*! ./super */ \"./src/core/shape/super.js\");\n\nvar _createCanvas = __webpack_require__(/*! ../utils/createCanvas */ \"./src/core/utils/createCanvas.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author muwoo\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Date: 2018/7/14\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * desc: cache canvas group, to improve performance\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * render one group replace render every item one by one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * but use this have to create a canvas dom every time.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * So it needs later optimization\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar ScrollItem = exports.ScrollItem = function (_Super) {\n  _inherits(ScrollItem, _Super);\n\n  function ScrollItem(drawStyle, vnode) {\n    _classCallCheck(this, ScrollItem);\n\n    var _this = _possibleConstructorReturn(this, (ScrollItem.__proto__ || Object.getPrototypeOf(ScrollItem)).call(this, drawStyle));\n\n    _this.stack = vnode.children;\n    _this.cacheCanvas = new _createCanvas.Canvas(_this.width, _this.height);\n    return _this;\n  }\n\n  _createClass(ScrollItem, [{\n    key: 'createCacheCanvas',\n    value: function createCacheCanvas(mainRender) {\n      mainRender.traverse(this.stack, this.cacheCanvas._ctx);\n    }\n  }, {\n    key: 'draw',\n    value: function draw(ctx, scrollTop) {\n      if (this.isVisible(scrollTop)) {\n        return;\n      }\n      ctx.drawImage(this.cacheCanvas._canvas, this.startX, this.startY - scrollTop, this.width, this.height);\n      this.render = true;\n    }\n  }]);\n\n  return ScrollItem;\n}(_super.Super);\n\n//# sourceURL=webpack:///./src/core/shape/scrollItem.js?");

/***/ }),

/***/ "./src/core/shape/scrollView.js":
/*!**************************************!*\
  !*** ./src/core/shape/scrollView.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _super = __webpack_require__(/*! ./super */ \"./src/core/shape/super.js\");\n\nvar _scroller = __webpack_require__(/*! scroller */ \"./node_modules/scroller/index.js\");\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./src/core/utils/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScrollView = exports.ScrollView = function (_Super) {\n  _inherits(ScrollView, _Super);\n\n  function ScrollView(drawStyle) {\n    _classCallCheck(this, ScrollView);\n\n    var _this = _possibleConstructorReturn(this, (ScrollView.__proto__ || Object.getPrototypeOf(ScrollView)).call(this, drawStyle));\n\n    _this.scroller = null;\n    /**\n     * Avoid duplication of creation using the same off screen canvas\n     * @type {null}\n     */\n    _this.mainInstance = null;\n    return _this;\n  }\n\n  _createClass(ScrollView, [{\n    key: 'draw',\n    value: function draw(mainRender) {\n      this.mainInstance = mainRender;\n      this.createScroller();\n      this.updateScrollingDimensions();\n      this.render = true;\n      this.removeListener();\n      this.bindListener();\n    }\n  }, {\n    key: 'reRender',\n    value: function reRender(top) {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        console.log('render');\n        _this2.mainInstance.clearCanvas();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _utils.canvasItemPool[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var cacheItem = _step.value;\n\n            cacheItem.draw(_this2.mainInstance._ctx, top, _this2.height, _this2);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this2.mainInstance.renderInstance.add(_this2.mainInstance._canvas);\n      });\n    }\n  }, {\n    key: 'bindListener',\n    value: function bindListener() {\n      window.addEventListener('touchstart', this.handleTouchStart.bind(this));\n      window.addEventListener('touchmove', this.handleTouchMove.bind(this));\n      window.addEventListener('touchend', this.handleTouchEnd.bind(this));\n    }\n  }, {\n    key: 'removeListener',\n    value: function removeListener() {\n      window.removeEventListener('touchstart', this.handleTouchStart);\n      window.removeEventListener('touchmove', this.handleTouchMove);\n      window.removeEventListener('touchend', this.handleTouchEnd);\n    }\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(e) {\n      if (this.scroller) {\n        this.scroller.doTouchStart(e.touches, e.timeStamp);\n      }\n    }\n  }, {\n    key: 'handleTouchMove',\n    value: function handleTouchMove(e) {\n      if (this.scroller) {\n        e.preventDefault();\n        this.scroller.doTouchMove(e.touches, e.timeStamp, e.scale);\n      }\n    }\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd(e) {\n      if (this.scroller) {\n        this.scroller.doTouchEnd(e.timeStamp);\n      }\n    }\n  }, {\n    key: 'createScroller',\n    value: function createScroller() {\n      var options = {\n        scrollingX: false,\n        scrollingY: true,\n        animationDuration: 100\n      };\n      this.scroller = new _scroller.Scroller(this.handleScroll.bind(this), options);\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll(left, top) {\n      /**\n       * When rendering, it needs to scroll to the previous position.\n       */\n      _utils.constants.top = _utils.constants.scrollTop + top;\n      _utils.constants.scrollerTop = top;\n      this.reRender(top);\n    }\n  }, {\n    key: 'updateScrollingDimensions',\n    value: function updateScrollingDimensions() {\n      this.scroller.setDimensions(this.width, this.height, this.width, this.drawStyle.scrollHeight);\n      this.scroller.scrollTo(0, _utils.constants.scrollTop);\n    }\n  }]);\n\n  return ScrollView;\n}(_super.Super);\n\n//# sourceURL=webpack:///./src/core/shape/scrollView.js?");

/***/ }),

/***/ "./src/core/shape/super.js":
/*!*********************************!*\
  !*** ./src/core/shape/super.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author muwoo\n * Date: 2018/7/11\n */\nvar defaultStyle = {\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  width: 0,\n  height: 0\n};\n\nvar Super = exports.Super = function () {\n  function Super(drawStyle) {\n    _classCallCheck(this, Super);\n\n    this.render = false;\n    this.drawStyle = Object.assign({}, defaultStyle, drawStyle);\n    this.startX = this.drawStyle.left;\n    this.startY = this.drawStyle.top;\n    this.width = this.drawStyle.width;\n    this.height = this.drawStyle.height;\n    this.fillStyle = this.drawStyle.fill || '#fff';\n  }\n\n  _createClass(Super, [{\n    key: 'isInPath',\n    value: function isInPath(point) {\n      if (this.render && point.layerX >= this.startX && point.layerX <= this.width + this.startX && point.layerY >= this.startY && point.layerY <= this.height + this.startY) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'isVisible',\n    value: function isVisible(scrollTop) {\n      return this.startY - scrollTop + this.height <= 0 || this.startY - scrollTop > window.innerHeight;\n    }\n  }]);\n\n  return Super;\n}();\n\n//# sourceURL=webpack:///./src/core/shape/super.js?");

/***/ }),

/***/ "./src/core/shape/text.js":
/*!********************************!*\
  !*** ./src/core/shape/text.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _super = __webpack_require__(/*! ./super */ \"./src/core/shape/super.js\");\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./src/core/utils/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author muwoo\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Date: 2018/7/12\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar Text = exports.Text = function (_Super) {\n  _inherits(Text, _Super);\n\n  function Text(drawStyle, text) {\n    _classCallCheck(this, Text);\n\n    var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, drawStyle));\n\n    _this.text = text;\n    _this.font = _this.drawStyle['font-size'] || _this.drawStyle['fontSize'] || 12;\n    _this.height = _this.font;\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: 'draw',\n    value: function draw(ctx, scrollTop, visibleHeight) {\n      if (this.isVisible(scrollTop, visibleHeight)) {\n        return;\n      }\n      ctx.fillStyle = this.fillStyle;\n      ctx.textBaseline = 'top';\n      ctx.font = this.font + 'px ' + _utils.constants.DEFAULT_FONT_FAMILY;\n      var distText = this.filterText(ctx, this.text);\n      this.width = ctx.measureText(distText).width;\n      var drawY = this.startY - scrollTop;\n      ctx.fillText(distText, this.startX, drawY);\n      this.render = true;\n    }\n\n    /**\n     * clip text\n     * @param ctx\n     * @param text\n     * @returns {*}\n     */\n\n  }, {\n    key: 'filterText',\n    value: function filterText(ctx, text) {\n      if (this.drawStyle.ellipse && this.drawStyle.width) {\n        var filterText = '';\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = text.split('')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var char = _step.value;\n\n            if (ctx.measureText(filterText + '...').width >= this.drawStyle.width) {\n              filterText += '...';\n              break;\n            }\n            filterText += char;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return filterText;\n      }\n      return text;\n    }\n  }]);\n\n  return Text;\n}(_super.Super);\n\n//# sourceURL=webpack:///./src/core/shape/text.js?");

/***/ }),

/***/ "./src/core/shape/view.js":
/*!********************************!*\
  !*** ./src/core/shape/view.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.View = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _super = __webpack_require__(/*! ./super */ \"./src/core/shape/super.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author muwoo\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Date: 2018/7/11\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar View = exports.View = function (_Super) {\n  _inherits(View, _Super);\n\n  function View(drawStyle) {\n    _classCallCheck(this, View);\n\n    return _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).call(this, drawStyle));\n  }\n\n  _createClass(View, [{\n    key: 'draw',\n    value: function draw(ctx, scrollTop, visibleHeight) {\n      if (this.isVisible(scrollTop, visibleHeight)) {\n        return;\n      }\n      ctx.fillStyle = this.fillStyle;\n      ctx.fillRect(this.startX, this.startY - scrollTop, this.width, this.height);\n      this.render = true;\n    }\n  }]);\n\n  return View;\n}(_super.Super);\n\n//# sourceURL=webpack:///./src/core/shape/view.js?");

/***/ }),

/***/ "./src/core/utils/cachePool.js":
/*!*************************************!*\
  !*** ./src/core/utils/cachePool.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @author muwoo\n * Date: 2018/7/15\n */\nvar pool = function pool() {\n  var _ref;\n\n  var pool = new Map();\n  var length = 0;\n  return _ref = {\n    pool: pool,\n    add: function add(key, value) {\n      this.pool.set(key, value);\n      this.length++;\n    },\n    get: function get(key) {\n      return this.pool.get(key);\n    },\n    clear: function clear() {\n      this.pool = new Map();\n      this.length = 0;\n    }\n  }, _defineProperty(_ref, Symbol.iterator, function () {\n    return this.pool.values();\n  }), _defineProperty(_ref, \"length\", length), _ref;\n};\n\nvar canvasItemPool = exports.canvasItemPool = pool();\nvar imgCachePool = exports.imgCachePool = pool();\n\n//# sourceURL=webpack:///./src/core/utils/cachePool.js?");

/***/ }),

/***/ "./src/core/utils/constans.js":
/*!************************************!*\
  !*** ./src/core/utils/constans.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * default font family\n * @type {string}\n */\nvar DEFAULT_FONT_FAMILY = exports.DEFAULT_FONT_FAMILY = 'Helvetica Neue,Helvetica,Arial,PingFangSC-Regular,Microsoft YaHei,SimSun,sans-serif';\n\n/**\n * scroll top, when view update will be reset.\n * @type {number}\n */\nvar top = exports.top = 0;\n\n/**\n * scroll top, when view update will not be reset\n * @type {number}\n */\nvar scrollTop = exports.scrollTop = 0;\n\nvar scrollerTop = exports.scrollerTop = 0;\n\n//# sourceURL=webpack:///./src/core/utils/constans.js?");

/***/ }),

/***/ "./src/core/utils/createCanvas.js":
/*!****************************************!*\
  !*** ./src/core/utils/createCanvas.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author muwoo\n * Date: 2018/7/15\n */\nvar Canvas = exports.Canvas = function () {\n  function Canvas(width, height, scale) {\n    _classCallCheck(this, Canvas);\n\n    if (!this._canvas) {\n      this._canvas = document.createElement('canvas');\n    }\n\n    this.width = width;\n    this.height = height;\n    this.scale = scale || window.devicePixelRatio;\n\n    this._canvas.width = this.width * this.scale;\n    this._canvas.height = this.height * this.scale;\n    this._canvas.style.width = this.width + 'px';\n    this._canvas.style.height = this.height + 'px';\n    this._canvas.getContext('2d').scale(this.scale, this.scale);\n    this._ctx = this._canvas.getContext('2d');\n  }\n\n  _createClass(Canvas, [{\n    key: 'add',\n    value: function add(offScreenCanvas) {\n      this._ctx.clearRect(0, 0, this.width, this.height);\n      this._ctx.drawImage(offScreenCanvas, 0, 0, this.width, this.height);\n    }\n  }]);\n\n  return Canvas;\n}();\n\n//# sourceURL=webpack:///./src/core/utils/createCanvas.js?");

/***/ }),

/***/ "./src/core/utils/index.js":
/*!*********************************!*\
  !*** ./src/core/utils/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = exports.canvasItemPool = exports.imgCachePool = exports.constants = undefined;\n\nvar _constans = __webpack_require__(/*! ./constans */ \"./src/core/utils/constans.js\");\n\nvar constants = _interopRequireWildcard(_constans);\n\nvar _cachePool = __webpack_require__(/*! ./cachePool */ \"./src/core/utils/cachePool.js\");\n\nvar _createCanvas = __webpack_require__(/*! ./createCanvas */ \"./src/core/utils/createCanvas.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.constants = constants;\nexports.imgCachePool = _cachePool.imgCachePool;\nexports.canvasItemPool = _cachePool.canvasItemPool;\nexports.Canvas = _createCanvas.Canvas; /**\n                                        * @author muwoo\n                                        * Date: 2018/7/13\n                                        */\n\n//# sourceURL=webpack:///./src/core/utils/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(/*! ./core/index */ \"./src/core/index.js\");\n\nvar _utils = __webpack_require__(/*! ./core/utils */ \"./src/core/utils/index.js\");\n\n/**\n * @author muwoo\n * Date: 2018/7/2\n */\nvar RenderCanvas = function RenderCanvas() {};\n\nRenderCanvas.install = function (Vue) {\n  Vue.mixin({\n    data: function data() {\n      return {\n        options: {\n          /**\n           * canvas width\n           */\n          width: 0,\n          /**\n           * canvas height\n           */\n          height: 0\n        },\n        /**\n         * mainCanvas in dom\n         */\n        renderInstance: null\n      };\n    },\n    created: function created() {\n      if (this.$options.renderCanvas) {\n        this.options = Object.assign({}, this.options, this.getOptions());\n        this.renderInstance = new _utils.Canvas(this.options.width, this.options.height);\n        this.$watch(this.updateCanvas, this.noop);\n        document.body.appendChild(this.renderInstance._canvas);\n      }\n    },\n\n    methods: {\n      updateCanvas: function updateCanvas() {\n        /**\n         * to record before re-render scrollTop\n         * @type {number}\n         */\n        _utils.constants.scrollTop += _utils.constants.top;\n        /**\n         * get render vnode\n         */\n        var vnode = this.$options.renderCanvas.call(this._renderProxy, this.$createElement);\n\n        /**\n         * get off screen render canvas\n         * @type {Render}\n         */\n        var render = new _index.Render(this.renderInstance, vnode, this.options.width, this.options.height);\n        var offScreenCanvas = render.vnode2canvas();\n\n        /**\n         * render off screen canvas to mainCanvas\n         */\n        this.renderInstance.add(offScreenCanvas);\n      },\n      getOptions: function getOptions() {\n        return typeof this.$options.canvasOptions === 'function' ? this.$options.canvasOptions() : this.$options.canvasOptions || {};\n      },\n      noop: function noop() {}\n    }\n  });\n};\n\nwindow.RenderCanvas = RenderCanvas;\n\nexports.default = RenderCanvas;\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });